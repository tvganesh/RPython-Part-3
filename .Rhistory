c=a/a+b
c
c=a/(a+b)
c
a= 1 *0.8 *.2^5*0.2
a
b= 1 *0.3*.7^5 *.7
b
d= b/(a+b)
d
a= 1 *0.8 *.2^5*0.5
a
b= 1 *0.3*.7^5 *.5
b
c=a/(a+b)
c
d= b/(a+b)
d
a1= 6 * 0.5^2 *0.4^2
b1= 6 *.7^2*.3^2
c1=6 *.3^2*.7^2
d1=a1/(a1+b1+c1)
d1
e1= (b1+c1)/(a1+b1+c1)
e1
a= 1 *0.8^0 *.2^5*0.5
a
b= 1 *0.3^0 *.7^5 *0.5
b
c=a/(a+b)
c
0.2^5
0.2^5*.5
a= 1 *0.8^0 *.2^5*0.5
a
b= 1 *0.3^0 *.7^5 *0.5
b
c=a/(a+b)
c
d= b/(a+b)
d
a1= 6 * 0.5^2 *0.4^2
b1= 6 *.7^2*.3^2
c1=6 *.3^2*.7^2
a1= 6 * 0.5^2 *0.4^2*0.4
b1= 6 *.7^2*.3^2 * 0.3
c1=6 *.3^2*.7^2 *0.3
d1=a1/(a1+b1+c1)
d1
e1= (b1+c1)/(a1+b1+c1)
e1
theta=seq(0,1,by=0.01)
plot(theta,dbeta(theta,1,5))
1/5
1-pbeta(0.5,1,5)
1-pbeta(0.95,8,16)
1-pbeta(0.95,2,2)
pbeta(q=0.35, shape1=8, shape2=16)
pbeta(q=0.35, shape1=0, shape2=5)
pbeta(0.5,1,5)
1-pbeta(0.5,1,5)
pbeta(0.5,1,5)
qbeta(p=0.975, shape1=8, shape2=16)
1/7*100
version
library(leaps)
library(boot)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
train_idx <- trainTestSplit(df,trainPercent=75,seed=5)
setwd("C:/Users/Ganesh/RandPython-Part3")
library(leaps)
library(boot)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
train_idx <- trainTestSplit(df,trainPercent=75,seed=5)
train <- df[train_idx, ]
source('RFunctions-1.R')
library(leaps)
library(boot)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
train_idx <- trainTestSplit(df,trainPercent=75,seed=5)
train <- df[train_idx, ]
test <- df[-train_idx, ]
fit <- lm(medv~. ,data=train)
summary(fit)
regfit.full=regsubsets(medv~.,train,nvmax=14)
reg.summary=summary(regfit.full)
names(reg.summary)
reg.summary$rsq
plot(reg.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(reg.summary$adjr2,xlab="Number of Variables",ylab="Adjusted RSq",type="l")
which.max(reg.summary$adjr2)
which.max(reg.summary$adjr2)
a=which.max(reg.summary$adjr2)
points(a,reg.summary$adjr2[a], col="red",cex=2,pch=20)
plot(reg.summary$cp,xlab="Number of Variables",ylab="Cp",type='l')
which.min(reg.summary$cp)
points(b,reg.summary$cp[b],col="red",cex=2,pch=20)
b=which.min(reg.summary$cp)
points(b,reg.summary$cp[b],col="red",cex=2,pch=20)
which.min(reg.summary$bic)
which.min(reg.summary$bic)
plot(reg.summary$bic,xlab="Number of Variables",ylab="BIC",type='l')
c=which.min(reg.summary$bic)
plot(reg.summary$bic,xlab="Number of Variables",ylab="BIC",type='l')
points(c,reg.summary$bic[c],col="red",cex=2,pch=20)
plot(regfit.full,scale="r2")
plot(regfit.full,scale="adjr2")
coef(regfit.full,6)
plot(regfit.full,scale="r2")
plot(reg.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
dim(df)
df.residual()
?df.residual
reg.summary
summary(reg.summary)
plot(reg.summary$rss,xlab="Number of Variables",ylab="RSS",type="l")
dim(train)
sqrt(reg.summary$rss/378)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
train_idx <- trainTestSplit(df,trainPercent=75,seed=5)
train <- df[train_idx, ]
test <- df[-train_idx, ]
fit <- lm(medv~. ,data=train)
summary(fit)
b=sqrt(reg.summary$rss/378)
b
length(b)
plot(c(1,4),b)
length(b)
plot(c(1,14),b)
plot(c(1,14),b)
length(b)
plot(seq(1,14),b)
plot(seq(1,14),b,type="b")
?Boston
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
library(MASS)
?Bostonb
?Boston
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
library(leaps)
library(boot)
source('RFunctions-1.R')
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
dim(df)
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
fit <- lm(medv~. ,data=train)
summary(fit)
names(fit)
fit$coefficients
names(fit$coefficients)
names(fit$coefficients[2])
fit$coefficients
fit
summary(fit)
a=summary(fit)
a
names(a)
a$residuals
source('RFunctions-1.R')
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
dim(df)
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
fit <- lm(medv~. ,data=train)
summary(fit)
names(df)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df)
head(df)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
dim(df)
names(df) <-c("no","crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
fit <- lm(medv~. ,data=train)
rm(list=ls())
source('RFunctions-1.R')
library(leaps)
library(boot)
source('RFunctions-1.R')
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
dim(df)
names(df) <-c("no","crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
fit <- lm(cost~. ,data=df)
summary(fit)
regfit.full=regsubsets(cost~.,train,nvmax=14)
bestFit=regsubsets(cost~.,df,nvmax=14)
bfSummary=summary(bestFit)
names(bfSummary)
plot(bfSummary$rss,xlab="Number of Variables",ylab="RSS",type="l")
plot(bfSummary$adjr2,xlab="Number of Variables",ylab="Adjusted RSq",type="l")
plot(bfSummary$adjr2,xlab="Number of Variables",ylab="Adjusted RSq",type="l")
a=which.max(reg.summary$adjr2)
points(a,reg.summary$adjr2[a], col="red",cex=2,pch=20)
j
a=which.max(bfSummary$adjr2)
points(a,bfSummary$adjr2[a], col="red",cex=2,pch=20)
plot(bfSummary$cp,xlab="Number of Variables",ylab="Cp",type='l')
b=which.min(bfSummary$cp)
points(b,bfSummary$cp[b],col="red",cex=2,pch=20)
plot(bfSummary$cp,xlab="Number of Variables",ylab="Cp",type='l')
b=which.min(bfSummary$cp)
points(b,bfSummary$cp[b],col="red",cex=2,pch=20)
plot(regfit.full,scale="r2")
plot(bfSummary,scale="r2")
plot(bestFit,scale="r2")
unlink('RandPython-Part3_cache', recursive = TRUE)
unlink('RandPython-Part3_cache', recursive = TRUE)
unlink('RandPython-Part3_cache', recursive = TRUE)
unlink('RandPython-Part3_cache', recursive = TRUE)
unlink('RandPython-Part3_cache', recursive = TRUE)
unlink('RandPython-Part3_cache', recursive = TRUE)
folds = sample(1:k, nrow(df), replace=TRUE)
k=5
k = 5
folds = sample(1:k, nrow(df), replace=TRUE)
folds
dim(df)
val <- seq(1,k)
for(i in 1:k){
train <- df[folds!=i,]
}
for(i in 1:k){
train[i] <- df[folds!=i,]
}
for(i in 1:k){
train[i] <- df[folds!=i,]
}
train<-NULL
for(i in 1:k){
train[i] <- df[folds!=i,]
}
df[folds!=i,]
a=df[folds!=i,]
dim(a)
i=1
train <- df[folds!=i,]
dim(train)
test <- df[folds==i,]
dim(test)
dim(df)
names(df)
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
test.mat
coefi=coef(fitFwd,id=2)
coefi
coef(fitFwd,id=3)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
mean((test$medv - pred)^2)
mean((test$cost - pred)^2)
rss=mean((test$cost - pred)^2)
rss
dim(df)
dim(test)
rss
sqrt(rss/92)
pred
test$cost
df.residual
df.residual()
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
train_idx <- trainTestSplit(df,trainPercent=75,seed=5)
train <- df[train_idx, ]
test <- df[-train_idx, ]
fit <- lm(medv~. ,data=train)
summary(fit)
dim(df)
k = 5
folds = sample(1:k, nrow(df), replace=TRUE)
rows=folds==2
df1<-df[rows,]
rows=folds==3
df2<-df[rows,]
fitFwd=regsubsets(medv~.,data=df[folds!=3,],nvmax=14,method="forward")
coefi=coef(fitFwd,id=2)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
set.seed(1)
k = 5
folds = sample(1:k, nrow(df), replace=TRUE)
rows=folds==2
df1<-df[rows,]
rows=folds==3
df2<-df[rows,]
fitFwd=regsubsets(medv~.,data=df[folds!=3,],nvmax=14,method="forward")
fitFwd=regsubsets(cost~.,data=df[folds!=3,],nvmax=14,method="forward")
fitFed
fitFwd
summary(fitFwd)
for(i in 1:k){
train <- df[folds!=i,]
test <- df[folds==i,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=2)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
print(rss)
}
for(i in 1:k){
train <- df[folds!=i,]
test <- df[folds==i,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=2)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
cvError=cvError+rss
print(cvError)
}
cvError<-0
for(i in 1:k){
train <- df[folds!=i,]
test <- df[folds==i,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=2)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
cvError=cvError+rss
print(cvError)
}
cvError=cvError/k
cvError
coef(fitFwd,id=1)
set.seed(1)
k = 5
folds = sample(1:k, nrow(df), replace=TRUE)
rows=folds==2
df1<-df[rows,]
rows=folds==3
df2<-df[rows,]
set.seed(6)
k=5
folds = sample(1:k, nrow(df), replace=TRUE)
cvError<-0
for(i in 1:k){
train <- df[folds!=i,]
test <- df[folds==i,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=2)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
cvError=cvError+rss
print(cvError)
}
coef(fitFwd,id=1)
dim(df)
names(train)
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
set.seed(6)
k=5
folds = sample(1:k, nrow(df), replace=TRUE)
cvError<-0
for(i in 1:k){
train <- df[folds!=i,]
test <- df[folds==i,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=2)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
cvError=cvError+rss
print(cvError)
}
names(train)
names(test)
names(df)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
dim(df)
head(df)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("no","crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
set.seed(6)
k=5
folds = sample(1:k, nrow(df), replace=TRUE)
cvError<-0
for(i in 1:k){
train <- df[folds!=i,]
test <- df[folds==i,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=2)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
cvError=cvError+rss
print(cvError)
}
names(train)
names(test)
library(dplyr)
df1 <- df %>% select("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
df1 <- df %>% select("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
df1 <- df %>% dplyr::select("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
dim(df1)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("no","crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
df1 <- df %>% dplyr::select("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
set.seed(6)
k=5
folds = sample(1:k, nrow(df1), replace=TRUE)
cvError<-0
for(i in 1:k){
train <- df1[folds!=i,]
test <- df1[folds==i,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=2)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
cvError=cvError+rss
print(cvError)
}
cvError=cvError/k
coef(fitFwd,id=1)
coef(fitFwd,id=2)
coef(fitFwd,id=3)
fitFwd
summary(fitfwd)
summary(fitFwd)
fitFwd$rss
fit <- lm(medv~. ,data=train)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
train_idx <- trainTestSplit(df,trainPercent=75,seed=5)
train <- df[train_idx, ]
test <- df[-train_idx, ]
fit <- lm(medv~. ,data=train)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
train_idx <- trainTestSplit(df,trainPercent=75,seed=5)
train <- df[train_idx, ]
test <- df[-train_idx, ]
fit <- lm(cost~. ,data=train)
summary(fit)
dim(train)
predict(fit,newdata=test)
dim(df)
dim(df1
)
df=read.csv("Boston.csv",stringsAsFactors = FALSE) # Data from MASS - SL
names(df) <-c("no","crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
df1 <- df %>% dplyr::select("crimeRate","zone","indus","charles","nox","rooms","age",
"distances","highways","tax","teacherRatio","color","status","cost")
set.seed(6)
nvmax<-13
cvError <- NULL
for(i in 1:nvmax){
k=5
folds = sample(1:k, nrow(df1), replace=TRUE)
cv<-0
for(j in 1:k){
train <- df1[folds!=j,]
test <- df1[folds==j,]
fitFwd=regsubsets(cost~.,data=train,nvmax=13,method="forward")
coefi=coef(fitFwd,id=i)
test.mat=model.matrix(cost~.,data=test)
pred=test.mat[,names(coefi)]%*%coefi
rss=mean((test$cost - pred)^2)
cv=cv+rss
}
cvError[i]=cv/k
}
cvError
plot(seq(1,13),cvError)
plot(seq(1,13),cvError,type="b",color="blue")
d <- rbind(a,cvError)
a <- seq(1,13)
d <- rbind(a,cvError)
d
d <- t(rbind(a,cvError))
d
names(d) <- c("No of features","Cross Validation Error")
names(d) <- c("Features","CVError")
ggplot(d,aes(x=Features,y=CVError),color="blue") + geom_line()
d <- as.dataframe(t(rbind(a,cvError)))
d <- dataframe(t(rbind(a,cvError)))
d <- Dataframe(t(rbind(a,cvError)))
d <- as.data.frame(t(rbind(a,cvError)))
names(d) <- c("Features","CVError")
ggplot(d,aes(x=Features,y=CVError),color="blue") + geom_line()
ggplot(d,aes(x=Features,y=CVError),color="blue") + geom_point() + geom_line(color="blue")
ggplot(d,aes(x=Features,y=CVError),color="blue") + geom_point() + geom_line(color="blue") +
xlab("No of features") + ylab("Cross Validation Error") +
ggtitle("Froward Selection - Cross Valdation Error vs No of Features")
ggplot(d,aes(x=Features,y=CVError),color="blue") + geom_point() + geom_line(color="blue") +
xlab("No of features") + ylab("Cross Validation Error") +
ggtitle("Forward Selection - Cross Valdation Error vs No of Features")
